{
	// Place your snippets for python here. Each snippet is defined under a snippet name and has a prefix, body and
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Class": {
		"prefix": ["cls", "class"],
		"body": [
			"class ${1:ClassName}:",
			"\t\"\"\"${2:class description}.\"\"\"",
			"\n\tdef __init__(self):",
			"\t\t\"\"\"Constructor.\"\"\"",
			"\t\t${0}"
		]
	},
	"Debugger": {
		"prefix": [
			"pdb",
		],
		"body": [
			"import pdb; pdb.set_trace()",
		]
	},
	"Class method": {
		"prefix": [
			"defcm"
		],
		"body": [
			"@classmethod",
			"def ${1:method}(cls${2:, arguments}):",
			"\t\"\"\"${3:docstring}.\"\"\"",
			"\t${0}"
		]
	},
	"Method": {
		"prefix": ["defm"],
		"body": [
			"def ${1:method}(self${2:, arguments}):",
			"\t\"\"\"${3:docstring}.\"\"\"",
			"\t${0}"
		]
	},
	"Function": {
		"prefix": [
			"deff"
		],
		"body": [
			"def ${1:function}(${2:arguments}):",
			"\t\"\"\"${3:docstring}.\"\"\"",
			"\t${0}"
		]
	},
	"Fixture": {
		"prefix": [
			"fix"
		],
		"body": [
			"@pytest.fixture()",
			"def ${1:function}(${2:arguments}):",
			"\t\"\"\"${3:docstring}.\"\"\"",
			"\t${4}"
		]
	},
	"Pretty print json": {
		"prefix": [
			"prettyjson"
		],
		"body": [
			"import json; print('${1}', json.dumps(${1:value}, sort_keys=True, indent=2, separators=(',', ': ')))"
		]
	}

}
